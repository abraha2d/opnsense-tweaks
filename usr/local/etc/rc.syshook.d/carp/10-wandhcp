#!/usr/local/bin/php
<?php

require_once("config.inc");
require_once("interfaces.inc");
require_once("util.inc");

$subsystem = !empty($argv[1]) ? $argv[1] : '';
$type = !empty($argv[2]) ? $argv[2] : '';

if ($type != 'MASTER' && $type != 'BACKUP') {
    log_error("Carp '$type' event unknown from source '{$subsystem}'");
    exit(1);
}

if (!strstr($subsystem, '@')) {
    log_error("Carp '$type' event triggered from wrong source '{$subsystem}'");
    exit(1);
}

$if_wan = get_real_interface('wan');
$if_opt5 = get_real_interface('opt5');

list ($vhid, $iface) = explode('@', $subsystem);

if ($iface != $if_wan
  && $iface != $if_opt5
) {
    log_error("Ignoring non-WAN interface '$iface'");
    exit(0);
}

# Translate interface name
$ifname = convert_real_interface_to_friendly_interface_name($iface);

function vipIterator() {
  foreach ((new OPNsense\Interfaces\Vip())->vip->iterateItems() as $id => $item) {
    $record = [];
    foreach ($item->iterateItems() as $key => $value) {
      $record[$key] = (string)$value;
    }
    $record['uuid'] = (string)$item->getAttributes()['uuid'];
    yield $record;
  }
}

$a_vip = iterator_to_array(vipIterator());

if ($type === "MASTER") {
    log_error("start dhcpcd on interface '$iface' due to CARP event '$type'");

    $mac = sprintf('00:00:5e:00:01:%02x', $vhid);
    log_error("Running 'ifconfig $iface ether $mac'");
    exec("ifconfig $iface ether $mac");

    $v4_vid = array_search("$ifname DHCP", array_column($a_vip, 'descr'));
    $v4_subnet = $a_vip[$v4_vid]['subnet'];

    log_error("Running 'dhcpcd -b -r $v4_subnet --noconfigure $iface'");
    unlink("/var/db/dhcpcd/$iface.lease6");
    exec("dhcpcd -b -r $v4_subnet --noconfigure $iface");
} else {
    log_error("stop dhcpcd on interface '$iface' due to CARP event '$type'");

    log_error("Running 'dhcpcd -x $iface'");
    exec("dhcpcd -x $iface");

    if (!empty(shell_exec("ifconfig $iface | grep hwaddr"))) {
        $mac = rtrim(shell_exec("ifconfig $iface | grep hwaddr | cut -d' ' -f2"));
        log_error("Running 'ifconfig $iface ether $mac'");
        exec("ifconfig $iface ether $mac");
    }
}
